# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: greeting

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs4.3

  # you can overwrite defaults here
  #  stage: dev
  region: us-west-2

# you can add statements to the Lambda function's IAM Role here
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:us-west-2:*:*"

#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

functions:
  list:
    handler: greetings/list.list
    memorySize: 128
    events:
      - http:
          path: greetings
          method: get
  #    The following are a few example events you can configure
  #    NOTE: Please make sure to change your handler code to work with those events
  #    Check the event documentation for details

  #      - s3: ${env:BUCKET}
  #      - schedule: rate(10 minutes)
  #      - sns: greeter-topic
  #      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
  #      - alexaSkill

  #    Define function environment variables here
  #    environment:
  #      variable2: value2

  create:
    handler: greetings/create.create
    memorySize: 128
    events:
      - http:
          path: greetings
          method: post
  read:
    handler: greetings/get.get
    memorySize: 128
    events:
      - http:
          path: greetings/{id}
          method: get
  update:
    handler: greetings/put.put
    memorySize: 128
    events:
      - http:
          path: greetings/{id}
          method: put
  delete:
    handler: greetings/delete.delete
    memorySize: 128
    events:
      - http:
          path: greetings/{id}
          method: delete

# you can add CloudFormation resource templates here
resources:
  Resources:
    greetingsDynamoDBTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: ${file(./greetings/config.js):tableName}
        AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        KeySchema:
        - AttributeName: id
          KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"

plugins:
  - serverless-plugin-optimize
  - serverless-offline
  - serverless-dynamodb-local

custom:
  dynamodb:
    start:
      port: 8000
      inMemory: true
      migration: true
    migration:
      dir: offline/migrations
  optimize:
    includePaths: ['config']

package:
  individually: true
